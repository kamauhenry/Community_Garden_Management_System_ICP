service: () -> {
    createActivity: (text, text, text) -> (variant {Ok:record {id:text; plotId:text; date:text; createdAt:text; description:text}; Err:text});
    createEvent: (text, text, text, text) -> (variant {Ok:record {id:text; title:text; date:text; createdAt:text; description:text; location:text}; Err:text});
    createPlot: (text, text, text, text) -> (variant {Ok:record {id:text; userId:text; createdAt:text; size:text; reservedUntil:text; location:text}; Err:text});
    createResource: (text, nat64, bool) -> (variant {Ok:record {id:text; name:text; createdAt:text; available:bool; quantity:nat64}; Err:text});
    createUserProfile: (record {name:text; email:text; phoneNumber:text}) -> (variant {Ok:record {owner:principal; userId:text; name:text; createdAt:text; email:text; phoneNumber:text}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}});
    getActivities: () -> (vec record {id:text; plotId:text; date:text; createdAt:text; description:text}) query;
    getEvents: () -> (vec record {id:text; title:text; date:text; createdAt:text; description:text; location:text}) query;
    getPlots: () -> (vec record {id:text; userId:text; createdAt:text; size:text; reservedUntil:text; location:text}) query;
    getResources: () -> (vec record {id:text; name:text; createdAt:text; available:bool; quantity:nat64}) query;
    getUserProfile: (text) -> (variant {Ok:record {owner:principal; userId:text; name:text; createdAt:text; email:text; phoneNumber:text}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}}) query;
    getUserProfileByOwner: () -> (variant {Ok:record {owner:principal; userId:text; name:text; createdAt:text; email:text; phoneNumber:text}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}}) query;
}
